{"version":3,"sources":["objects/player.ts"],"names":[],"mappings":"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","file":"objects/player.js","sourcesContent":["module objects {\r\n    // PLAYER CLASS ++++++++++++++++++++++++++++++\r\n    export class Player extends createjs.Bitmap {\r\n        // PRIVATE INSTANCE VARIABLES\r\n        private _topBounds: number;\r\n        private _bottomBounds: number;\r\n        private _pitch: number; // Plane nose angle\r\n        private _damage: number;\r\n        private _distance: number;\r\n        private _lastCollidedObject: GameObject;\r\n        private _defaultImage: any;\r\n        private _damagedImage: any;\r\n\r\n        // PUBLIC INSTANCE VARIABLES\r\n        public width: number;\r\n        public height: number;\r\n        constructor() {\r\n            super(assets.getResult(\"plane\"));\r\n            this._defaultImage = assets.getResult(\"plane\");\r\n            this._damagedImage = assets.getResult(\"plane_flames\");\r\n\r\n            this.width = this.getBounds().width;\r\n            this.height = this.getBounds().height;\r\n\r\n            this.regX = this.width * 0.5;\r\n            this.regY = this.height * 0.5;\r\n\r\n            this._topBounds = this.height * 0.5;\r\n            this._bottomBounds = config.Screen.HEIGHT - (this.height * 0.5);\r\n\r\n            this.x = (this.width * 0.5) + 20;\r\n            this.y = 350;\r\n            this._pitch = 0;\r\n            this._damage = 0;\r\n            this._distance = 0;\r\n            this._lastCollidedObject = new GameObject(\"plane\"); // 'Dummy' startup object \r\n        }\r\n\r\n        // PRIVATE METHODS\r\n        private _checkBounds(): void {\r\n            if (this.y < this._topBounds) {\r\n                this.y = this._topBounds;\r\n            }\r\n\r\n            if (this.y > this._bottomBounds) {\r\n                // Player crashed the plane\r\n                scene = config.Scene.END;\r\n                changeScene();\r\n            }\r\n        }\r\n\r\n\r\n        // PUBLIC METHODS\r\n        public update(): void {\r\n            this._pitch = -(this.y - stage.mouseY);\r\n            this.y += (this._pitch / 10);\r\n            \r\n            // Add a random 'bump' according to the damage amount\r\n            this.y += Math.random() * (this._damage / 2);\r\n            \r\n            var angle:number = this._pitch / 3;\r\n            this.rotation = angle >= -30 ? angle : -30;\r\n            this._distance++;\r\n            this._checkBounds();\r\n\r\n        }\r\n\r\n        // Register and treat a collision\r\n        public registerCollision(obj: GameObject): void {\r\n            if (this._lastCollidedObject.id != obj.id) {\r\n                switch (obj.name) {\r\n                    case \"extinguisher\":\r\n                        this._damage = 0;\r\n                        this.image = this._defaultImage;\r\n                        break;\r\n                    case \"birds\":\r\n                        this._damage += 15;\r\n                        this.image = this._damagedImage;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            this._lastCollidedObject = obj;\r\n        }\r\n        \r\n        // Return score elements to update screen labels\r\n        public scores(): any {\r\n            return {\r\n                distance: this._distance,\r\n                damage: this._damage\r\n            }\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}