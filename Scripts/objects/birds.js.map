{"version":3,"sources":["objects/birds.ts"],"names":[],"mappings":";;;;;AAAA,IAAO,OAAO,CA2Cb;AA3CD,WAAO,OAAO,EAAC,CAAC;IACZ,mDAAmD;IACnD;QAA2B,yBAAkB;QACzC,+CAA+C;QAE/C,8CAA8C;QAE9C,+CAA+C;QAC/C;YACI,kBAAM,OAAO,CAAC,CAAC;YAEhB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC/B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;YACpB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC;QAChD,CAAC;QAED,+CAA+C;QACrC,4BAAY,GAAtB,UAAuB,KAAY;YAC/B,0CAA0C;YAC1C,mCAAmC;YACnC,EAAE,CAAA,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACnC,CAAC;QACL,CAAC;QAED,4BAA4B;QAClB,sBAAM,GAAhB,UAAiB,KAAY;YACzB,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAClD,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC;YAC7C,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;YACf,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QAC9E,CAAC;QAGD,gDAAgD;QACzC,sBAAM,GAAb;YACI,qCAAqC;YACrC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACxC,CAAC;QACL,YAAC;IAAD,CAxCA,AAwCC,CAxC0B,OAAO,CAAC,UAAU,GAwC5C;IAxCY,aAAK,QAwCjB,CAAA;AACL,CAAC,EA3CM,OAAO,KAAP,OAAO,QA2Cb","file":"objects/birds.js","sourcesContent":["module objects {\r\n    // BIRDS CLASS ++++++++++++++++++++++++++++++++++++\r\n    export class Birds extends objects.GameObject {\r\n        // PRIVATE INSTANCE VARIABLES +++++++++++++++++\r\n        \r\n        // PUBLIC INSTANCE VARIABLES +++++++++++++++++\r\n        \r\n        // CONSTRUCTOR METHOD +++++++++++++++++++++++++\r\n        constructor() {\r\n            super(\"birds\");\r\n            \r\n           this._reset(this._rightBounds);\r\n           this.name = \"birds\";\r\n           this.id = Math.floor(Math.random() * 100000);\r\n        }\r\n        \r\n        // PRIVATE METHODS ++++++++++++++++++++++++++++\r\n        protected _checkBounds(value:number):void {\r\n            // check to see if the right of the flock \r\n            // is outside the viewport         \r\n            if(this.x <= value) {\r\n                this._reset(this._rightBounds);\r\n            }\r\n        }\r\n        \r\n        // reset the birds offscreen\r\n        protected _reset(value:number):void {\r\n            this._speed.x = - (Math.floor(Math.random() * 5) + 5);\r\n            this._speed.y = Math.floor(Math.random() * 4) - 2;\r\n            this.id = Math.floor(Math.random() * 100000);\r\n            this.x = value;\r\n            this.y = Math.floor(Math.random() * this._bottomBounds) + this._topBounds;\r\n        }\r\n        \r\n        \r\n        // PUBLIC METHODS ++++++++++++++++++++++++++++++\r\n        public update():void {\r\n            // scroll the birds across the screen\r\n            this.y += this._speed.y;\r\n            this.x += this._speed.x;\r\n            this._checkBounds(this._leftBounds);\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}