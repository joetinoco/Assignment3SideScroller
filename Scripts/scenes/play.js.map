{"version":3,"sources":["scenes/play.ts"],"names":[],"mappings":";;;;;AAAA,aAAa;AACb,IAAO,MAAM,CAsEZ;AAtED,WAAO,MAAM,EAAC,CAAC;IACX;QAA0B,wBAAa;QASnC,qCAAqC;QACrC;YACI,iBAAO,CAAC;QAEZ,CAAC;QAED,uCAAuC;QAEvC,eAAe;QACR,oBAAK,GAAZ;YACI,uBAAuB;YACvB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YAErB,0BAA0B;YAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAiB,CAAC;YAEzC,yBAAyB;YACzB,IAAI,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEzB,4BAA4B;YAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;YACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5B,4BAA4B;YAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;YACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5B,2BAA2B;YAC3B,GAAG,CAAA,CAAC,IAAI,KAAK,GAAU,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,KAAK,EAAE,EAAE,CAAC;gBAC1D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;gBAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACrC,CAAC;YAED,uCAAuC;YACvC,IAAI,CAAC,UAAU,GAAG,IAAI,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEvD,+CAA+C;YAC/C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC;QAED,0BAA0B;QACnB,qBAAM,GAAb;YAAA,iBAYC;YAXG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YAEtB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YAEtB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,IAAI;gBACpB,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACxC,CAAC;QAKL,WAAC;IAAD,CApEA,AAoEC,CApEyB,OAAO,CAAC,KAAK,GAoEtC;IApEY,WAAI,OAoEhB,CAAA;AACL,CAAC,EAtEM,MAAM,KAAN,MAAM,QAsEZ","file":"scenes/play.js","sourcesContent":["// PLAY SCENE\r\nmodule scenes {\r\n    export class Play extends objects.Scene {\r\n        //PRIVATE INSTANCE VARIABLES ++++++++++++\r\n        private _sky: objects.Sky;\r\n        private _island: objects.Island;\r\n        private _birds: objects.Birds[];\r\n        private _flockCount:number;\r\n        private _player: objects.Player;\r\n        private _collision: managers.Collision;\r\n        \r\n        // CONSTRUCTOR ++++++++++++++++++++++\r\n        constructor() {\r\n            super();\r\n           \r\n        }\r\n        \r\n        // PUBLIC METHODS +++++++++++++++++++++\r\n        \r\n        // Start Method\r\n        public start(): void {\r\n            // Set bird flock count\r\n            this._flockCount = 3;\r\n            \r\n            // Instantiate Cloud array\r\n            this._birds = new Array<objects.Birds>();\r\n                \r\n            // added sky to the scene\r\n            this._sky = new objects.Sky();\r\n            this.addChild(this._sky);\r\n\r\n            // added island to the scene\r\n            this._island = new objects.Island();\r\n            this.addChild(this._island);\r\n\r\n            // added player to the scene\r\n            this._player = new objects.Player();\r\n            this.addChild(this._player);\r\n            \r\n            //added clouds to the scene\r\n            for(var flock:number = 0; flock < this._flockCount; flock++) {\r\n                this._birds[flock] = new objects.Birds();\r\n               this.addChild(this._birds[flock]);\r\n            }\r\n            \r\n            // added collision manager to the scene\r\n            this._collision = new managers.Collision(this._player);\r\n            \r\n            // add this scene to the global stage container\r\n            stage.addChild(this);\r\n        }\r\n\r\n        // PLAY Scene updates here\r\n        public update(): void {\r\n            this._sky.update();\r\n            this._island.update();\r\n           \r\n            this._player.update();\r\n           \r\n            this._birds.forEach(bird => {\r\n                bird.update();\r\n                this._collision.check(bird);\r\n            });\r\n            \r\n            this._collision.check(this._island);\r\n        }\r\n        \r\n        \r\n        //EVENT HANDLERS ++++++++++++++++++++\r\n        \r\n    }\r\n}"],"sourceRoot":"/source/"}